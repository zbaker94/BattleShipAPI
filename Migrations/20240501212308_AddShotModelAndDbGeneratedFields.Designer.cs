// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BattleShipAPI.Migrations
{
    [DbContext(typeof(BattleshipContext))]
    [Migration("20240501212308_AddShotModelAndDbGeneratedFields")]
    partial class AddShotModelAndDbGeneratedFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BattleShipAPI.Models.Board", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Columns")
                        .HasColumnType("int");

                    b.Property<int>("GameInstanceId")
                        .HasColumnType("int");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Rows")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameInstanceId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("BattleShipAPI.Models.GameInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("PlayerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("GameInstances");
                });

            modelBuilder.Entity("BattleShipAPI.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("BattleShipAPI.Models.Shot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoardId")
                        .HasColumnType("int");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<bool>("Hit")
                        .HasColumnType("bit");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("Shot");
                });

            modelBuilder.Entity("BattleShipAPI.Models.Board", b =>
                {
                    b.HasOne("BattleShipAPI.Models.GameInstance", "GameInstance")
                        .WithMany()
                        .HasForeignKey("GameInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BattleShipAPI.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameInstance");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("BattleShipAPI.Models.GameInstance", b =>
                {
                    b.HasOne("BattleShipAPI.Models.Player", null)
                        .WithMany("GameInstances")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("BattleShipAPI.Models.Shot", b =>
                {
                    b.HasOne("BattleShipAPI.Models.Board", null)
                        .WithMany("BoardState")
                        .HasForeignKey("BoardId");
                });

            modelBuilder.Entity("BattleShipAPI.Models.Board", b =>
                {
                    b.Navigation("BoardState");
                });

            modelBuilder.Entity("BattleShipAPI.Models.Player", b =>
                {
                    b.Navigation("GameInstances");
                });
#pragma warning restore 612, 618
        }
    }
}
